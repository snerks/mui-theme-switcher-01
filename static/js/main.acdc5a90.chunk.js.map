{"version":3,"sources":["components/Header.tsx","models/constants.ts","components/CoffeeCard.tsx","components/Content.tsx","components/ContentSameHeight.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","typographyStyles","flex","Header","isDarkMode","setIsDarkMode","classes","AppBar","position","Toolbar","Typography","className","Paper","title","Switch","checked","onChange","price","description","avatarUrl","imageUrl","CoffeeCard","props","Card","CardHeader","avatar","Avatar","src","action","IconButton","aria-label","subheader","CardMedia","style","height","image","CardContent","variant","component","CardActions","Button","size","Content","Grid","container","spacing","coffeMakerList","map","coffeMakerObj","key","item","xs","sm","getCoffeMakerCard","ContentSameHeight","withStyles","card","margin","display","flexDirection","justifyContent","color","gutterBottom","App","useState","theme","createMuiTheme","palette","type","ThemeProvider","elevation","direction","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.acdc5a90.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { AppBar, Toolbar, Typography, Switch, Paper } from \"@material-ui/core\";\r\nimport HighlightIcon from \"@material-ui/icons/HighlightOutlined\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  typographyStyles: {\r\n    flex: 1\r\n  }\r\n}));\r\n\r\ninterface Props {\r\n  isDarkMode: boolean;\r\n  setIsDarkMode: Function;\r\n}\r\n\r\nconst Header: React.FC<Props> = ({ isDarkMode, setIsDarkMode }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <Typography className={classes.typographyStyles}>\r\n          Material UI Theme Switch Sample\r\n        </Typography>\r\n        <Paper title=\"use this switch for dark/light mode\">\r\n          <HighlightIcon />\r\n        </Paper>\r\n        <Switch checked={isDarkMode} onChange={() => setIsDarkMode(!isDarkMode)} />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default [\r\n  {\r\n    title: \"Keurig K-Duo\",\r\n    price: \"$149.99\",\r\n    description:\r\n      \"Use both ground coffee and k-cup pods. Multiple brew sizes: brew an 8, 10, or 12-cup carafe and an 237, 296, or 355ml (8, 10, or 12 oz. ) cup \",\r\n    avatarUrl:\r\n      \"https://upload.wikimedia.org/wikipedia/commons/e/e0/Keurig_Logo.png\",\r\n    imageUrl:\r\n      \"https://images-na.ssl-images-amazon.com/images/I/61-KUPluVYL._AC_SL1500_.jpg\"\r\n  },\r\n  {\r\n    title: \"KRUPS Electric Spice\",\r\n    price: \"$19.99\",\r\n    description:\r\n      \"Large grinding capacity yields ground coffee for up to 12 cups of coffee\",\r\n    avatarUrl:\r\n      \"https://images-na.ssl-images-amazon.com/images/I/81CbxNLCHCL._AC_SL1500_.jpg\",\r\n    imageUrl:\r\n      \"https://images-na.ssl-images-amazon.com/images/I/71FhMLBP9XL._AC_SL1500_.jpg\"\r\n  },\r\n  {\r\n    title: \"Hamilton Beach Flexbrew\",\r\n    price: \"$89.99\",\r\n    description:\r\n      \"No two coffee drinkers are the same â€“ so, the flexibility to customize how and what you brew is key. From fresh grounds to K-Cup pods, the Hamilton Beach FlexBrew 2-Way Coffee Maker gives you the options to please fans of all types of coffees.\",\r\n    avatarUrl:\r\n      \"https://images-na.ssl-images-amazon.com/images/I/81mjh5ZSu1L._AC_SL1500_.jpg\",\r\n    imageUrl:\r\n      \"https://images-na.ssl-images-amazon.com/images/I/818rz3CIaFL._AC_SL1500_.jpg\"\r\n  },\r\n  {\r\n    title: \"Secura French Press\",\r\n    price: \"$36.48\",\r\n    description:\r\n      \"3-layered Stainless steel filter traps the smallest coffee grounds to produce an exceptional full-bodied flavor, filter is easy to disassemble and clean.\",\r\n    avatarUrl:\r\n      \"https://images-na.ssl-images-amazon.com/images/I/61u76aiQQsL._AC_SL1000_.jpg\",\r\n    imageUrl:\r\n      \"https://images-na.ssl-images-amazon.com/images/I/61XRMmXVwQL._AC_SL1500_.jpg\"\r\n  },\r\n  {\r\n    title: \"Cafe Du Chateau French Press\",\r\n    price: \"$32.95\",\r\n    description:\r\n      \"We use double stainless steel screen filters on a durable plunger supported by a spring loaded base plate to seal the edges, followed by a final top lid strainer to give you a pure brew with no grounds unlike other cheap presses.\",\r\n    avatarUrl:\r\n      \"https://images-na.ssl-images-amazon.com/images/I/81BdxpiRtCL._AC_SL1500_.jpg\",\r\n    imageUrl:\r\n      \"https://images-na.ssl-images-amazon.com/images/I/81luUhz7ZlL._AC_SL1500_.jpg\"\r\n  },\r\n  {\r\n    title: \"LIVINGbasics Single Serve Coffee Maker \",\r\n    price: \"$37.99\",\r\n    description:\r\n      'Brew with a single serve k-cup pod or ground coffee. Less than 14 cm (5.5\") wide slim design, its the perfect size for any space.',\r\n    avatarUrl:\r\n      \"https://images-na.ssl-images-amazon.com/images/I/61PGHBLkl8L._AC_SL1500_.jpg\",\r\n    imageUrl:\r\n      \"https://images-na.ssl-images-amazon.com/images/I/61KBB8K1wDL._AC_SL1000_.jpg\"\r\n  }\r\n];\r\n","import React from \"react\";\r\n// import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport { Avatar, IconButton, CardMedia } from \"@material-ui/core\";\r\n\r\nexport interface CoffeeCardProps {\r\n  title: string;\r\n  price: string;\r\n  description: string;\r\n  avatarUrl: string;\r\n  imageUrl: string;\r\n}\r\n\r\nconst CoffeeCard: React.FC<CoffeeCardProps> = props => {\r\n  const { avatarUrl, title, price, description, imageUrl } = props;\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        avatar={<Avatar src={avatarUrl} />}\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <ShareIcon />\r\n          </IconButton>\r\n        }\r\n        title={title}\r\n        subheader={price}\r\n      />\r\n      <CardMedia style={{ height: \"150px\" }} image={imageUrl} />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\">BUY NOW</Button>\r\n        <Button size=\"small\">OFFER</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CoffeeCard;\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport coffeMakerList from \"../models/constants\";\r\nimport CoffeeCard, { CoffeeCardProps } from \"./CoffeeCard\";\r\n\r\nconst Content = () => {\r\n  const getCoffeMakerCard = (coffeMakerObj: CoffeeCardProps) => {\r\n    return (\r\n      <Grid key={coffeMakerObj.imageUrl} item xs={12} sm={4}>\r\n        <CoffeeCard {...coffeMakerObj} />\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      {coffeMakerList.map(coffeMakerObj => getCoffeMakerCard(coffeMakerObj))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\n// import ReactDOM from \"react-dom\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst styles = {\r\n    card: {\r\n        margin: 16,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\"\r\n    }\r\n};\r\n\r\nconst ContentSameHeight = withStyles(styles as any)((props: any) => {\r\n    const classes = props.classes;\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs component={Card} className={classes.card}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>\r\n                        Card A\r\n          </Typography>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        Short content\r\n          </Typography>\r\n\r\n                    <Typography component=\"p\">Not much to say</Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button size=\"small\">Learn More</Button>\r\n                </CardActions>\r\n            </Grid>\r\n            <Grid item xs component={Card} className={classes.card}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>\r\n                        Card B\r\n          </Typography>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        Medium content\r\n          </Typography>\r\n                    <Typography component=\"p\">\r\n                        Slightly more to say than what Card A has to say\r\n          </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button size=\"small\">Learn More</Button>\r\n                </CardActions>\r\n            </Grid>\r\n            <Grid item xs component={Card} className={classes.card}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>\r\n                        Card C\r\n          </Typography>\r\n                    <Typography variant=\"h5\" component=\"h2\">\r\n                        Long content\r\n          </Typography>\r\n                    <Typography component=\"p\">\r\n                        I have quite a lot to say and as a result I am quite tall, but the\r\n                        other cards heights stretch with me\r\n          </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button size=\"small\">Learn More</Button>\r\n                </CardActions>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n});\r\n\r\nexport default ContentSameHeight;\r\n","import React, { useState } from 'react';\r\n\r\nimport { Paper, Grid, Typography, Button, ThemeProvider, createMuiTheme, Card, CardContent } from \"@material-ui/core\";\r\n// import HighlightIcon from \"@material-ui/icons/HighlightOutlined\";\r\nimport Header from './components/Header';\r\n// import CoffeeCard from './components/CoffeeCard';\r\n\r\n// import coffeMakerItems from \"./models/constants\";\r\nimport Content from './components/Content';\r\nimport ContentSameHeight from './components/ContentSameHeight';\r\n// import classes from '*.module.css';\r\n\r\nfunction App() {\r\n\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: isDarkMode ? \"dark\" : \"light\"\r\n    }\r\n  });\r\n\r\n  // const coffeeCardDataItems = [coffeMakerItems[0]];\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Paper elevation={0} style={{ height: \"100vh\" }}>\r\n        <Grid container direction=\"column\">\r\n          <Grid item>\r\n            <Header isDarkMode={isDarkMode} setIsDarkMode={setIsDarkMode} />\r\n          </Grid>\r\n          <Grid item container direction=\"column\">\r\n            <Card>\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                  Sample application, showing Dark theme switching.\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n\r\n            {/* <HighlightIcon /> */}\r\n            <Button variant=\"contained\" color=\"primary\">\r\n              This is a Primary button\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              This is a Secondary button\r\n            </Button>\r\n            {/* <Typography variant=\"subtitle1\">{isDarkMode ? \"light\" : \"dark\"}</Typography> */}\r\n            {/* <Switch checked={isDarkMode} onChange={() => setIsDarkMode(!isDarkMode)} /> */}\r\n          </Grid>\r\n\r\n          <Grid item container>\r\n            <Grid item xs={false} sm={2} />\r\n            <Grid item xs={12} sm={8}>\r\n              <ContentSameHeight />\r\n            </Grid>\r\n            <Grid item xs={false} sm={2} />\r\n          </Grid>\r\n\r\n          <Grid item container>\r\n            <Grid item xs={false} sm={2} />\r\n            <Grid item xs={12} sm={8}>\r\n              <Content />\r\n            </Grid>\r\n            <Grid item xs={false} sm={2} />\r\n          </Grid>\r\n          {/* {coffeeCardDataItems.map(item => <CoffeeCard {...item} />)} */}\r\n\r\n        </Grid>\r\n      </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}